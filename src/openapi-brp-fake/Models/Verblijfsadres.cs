/*
 * NPS op RaadpleegIngeschrevenPersoonNAW
 *
 * Specificatie RSGB 3.0 Json opvragen NPS
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Verblijfsadres : IEquatable<Verblijfsadres>
    { 
        /// <summary>
        /// Gets or Sets PeriodeGeldigheid
        /// </summary>
        [DataMember(Name="periodeGeldigheid")]
        public PersoonPeriodeGeldigheid PeriodeGeldigheid { get; set; }

        /// <summary>
        /// Gets or Sets IdentificatieNummerAanduiding
        /// </summary>
        [DataMember(Name="identificatieNummerAanduiding")]
        public int? IdentificatieNummerAanduiding { get; set; }

        /// <summary>
        /// Gets or Sets Postcode
        /// </summary>
        [DataMember(Name="postcode")]
        public string Postcode { get; set; }

        /// <summary>
        /// Gets or Sets Huisnummer
        /// </summary>
        [DataMember(Name="huisnummer")]
        public decimal? Huisnummer { get; set; }

        /// <summary>
        /// Gets or Sets Huisletter
        /// </summary>
        [DataMember(Name="huisletter")]
        public string Huisletter { get; set; }

        /// <summary>
        /// Gets or Sets Huisnummertoevoeging
        /// </summary>
        [DataMember(Name="huisnummertoevoeging")]
        public string Huisnummertoevoeging { get; set; }

        /// <summary>
        /// Gets or Sets Locatiebeschrijving
        /// </summary>
        [DataMember(Name="locatiebeschrijving")]
        public string Locatiebeschrijving { get; set; }

        /// <summary>
        /// Gets or Sets NaamOpenbareRuimte
        /// </summary>
        [DataMember(Name="naamOpenbareRuimte")]
        public string NaamOpenbareRuimte { get; set; }

        /// <summary>
        /// Gets or Sets Woonplaatsnaam
        /// </summary>
        [DataMember(Name="woonplaatsnaam")]
        public string Woonplaatsnaam { get; set; }

        /// <summary>
        /// Gets or Sets WoonplaatsIdentificatie
        /// </summary>
        [DataMember(Name="woonplaatsIdentificatie")]
        public string WoonplaatsIdentificatie { get; set; }
        /// <summary>
        ///  Gets or Sets straatnaam
        /// </summary>
        /// <value></value>
        [DataMember(Name="straatnaam")]
        public string Straatnaam { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Verblijfsadres {\n");
            sb.Append("  PeriodeGeldigheid: ").Append(PeriodeGeldigheid).Append("\n");
            sb.Append("  IdentificatieNummerAanduiding: ").Append(IdentificatieNummerAanduiding).Append("\n");
            sb.Append("  Postcode: ").Append(Postcode).Append("\n");
            sb.Append("  Huisnummer: ").Append(Huisnummer).Append("\n");
            sb.Append("  Huisletter: ").Append(Huisletter).Append("\n");
            sb.Append("  Huisnummertoevoeging: ").Append(Huisnummertoevoeging).Append("\n");
            sb.Append("  Locatiebeschrijving: ").Append(Locatiebeschrijving).Append("\n");
            sb.Append("  NaamOpenbareRuimte: ").Append(NaamOpenbareRuimte).Append("\n");
            sb.Append("  Woonplaatsnaam: ").Append(Woonplaatsnaam).Append("\n");
            sb.Append("  WoonplaatsIdentificatie: ").Append(WoonplaatsIdentificatie).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Verblijfsadres)obj);
        }

        /// <summary>
        /// Returns true if Verblijfsadres instances are equal
        /// </summary>
        /// <param name="other">Instance of Verblijfsadres to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Verblijfsadres other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    PeriodeGeldigheid == other.PeriodeGeldigheid ||
                    PeriodeGeldigheid != null &&
                    PeriodeGeldigheid.Equals(other.PeriodeGeldigheid)
                ) && 
                (
                    IdentificatieNummerAanduiding == other.IdentificatieNummerAanduiding ||
                    IdentificatieNummerAanduiding != null &&
                    IdentificatieNummerAanduiding.Equals(other.IdentificatieNummerAanduiding)
                ) && 
                (
                    Postcode == other.Postcode ||
                    Postcode != null &&
                    Postcode.Equals(other.Postcode)
                ) && 
                (
                    Huisnummer == other.Huisnummer ||
                    Huisnummer != null &&
                    Huisnummer.Equals(other.Huisnummer)
                ) && 
                (
                    Huisletter == other.Huisletter ||
                    Huisletter != null &&
                    Huisletter.Equals(other.Huisletter)
                ) && 
                (
                    Huisnummertoevoeging == other.Huisnummertoevoeging ||
                    Huisnummertoevoeging != null &&
                    Huisnummertoevoeging.Equals(other.Huisnummertoevoeging)
                ) && 
                (
                    Locatiebeschrijving == other.Locatiebeschrijving ||
                    Locatiebeschrijving != null &&
                    Locatiebeschrijving.Equals(other.Locatiebeschrijving)
                ) && 
                (
                    NaamOpenbareRuimte == other.NaamOpenbareRuimte ||
                    NaamOpenbareRuimte != null &&
                    NaamOpenbareRuimte.Equals(other.NaamOpenbareRuimte)
                ) && 
                (
                    Woonplaatsnaam == other.Woonplaatsnaam ||
                    Woonplaatsnaam != null &&
                    Woonplaatsnaam.Equals(other.Woonplaatsnaam)
                ) && 
                (
                    WoonplaatsIdentificatie == other.WoonplaatsIdentificatie ||
                    WoonplaatsIdentificatie != null &&
                    WoonplaatsIdentificatie.Equals(other.WoonplaatsIdentificatie)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (PeriodeGeldigheid != null)
                    hashCode = hashCode * 59 + PeriodeGeldigheid.GetHashCode();
                    if (IdentificatieNummerAanduiding != null)
                    hashCode = hashCode * 59 + IdentificatieNummerAanduiding.GetHashCode();
                    if (Postcode != null)
                    hashCode = hashCode * 59 + Postcode.GetHashCode();
                    if (Huisnummer != null)
                    hashCode = hashCode * 59 + Huisnummer.GetHashCode();
                    if (Huisletter != null)
                    hashCode = hashCode * 59 + Huisletter.GetHashCode();
                    if (Huisnummertoevoeging != null)
                    hashCode = hashCode * 59 + Huisnummertoevoeging.GetHashCode();
                    if (Locatiebeschrijving != null)
                    hashCode = hashCode * 59 + Locatiebeschrijving.GetHashCode();
                    if (NaamOpenbareRuimte != null)
                    hashCode = hashCode * 59 + NaamOpenbareRuimte.GetHashCode();
                    if (Woonplaatsnaam != null)
                    hashCode = hashCode * 59 + Woonplaatsnaam.GetHashCode();
                    if (WoonplaatsIdentificatie != null)
                    hashCode = hashCode * 59 + WoonplaatsIdentificatie.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Verblijfsadres left, Verblijfsadres right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Verblijfsadres left, Verblijfsadres right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
