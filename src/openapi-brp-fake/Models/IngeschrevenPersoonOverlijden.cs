/*
 * NPS op RaadpleegIngeschrevenPersoonNAW
 *
 * Specificatie RSGB 3.0 Json opvragen NPS
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class IngeschrevenPersoonOverlijden : IEquatable<IngeschrevenPersoonOverlijden>
    { 
        /// <summary>
        /// Gets or Sets OverlijdenPlaats
        /// </summary>
        [DataMember(Name="overlijdenPlaats")]
        public string OverlijdenPlaats { get; set; }

        /// <summary>
        /// Gets or Sets OverlijdenLand
        /// </summary>
        [DataMember(Name="overlijdenLand")]
        public string OverlijdenLand { get; set; }

        /// <summary>
        /// Gets or Sets Overlijdensdatum
        /// </summary>
        [DataMember(Name="overlijdensdatum")]
        public DateTime? Overlijdensdatum { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IngeschrevenPersoonOverlijden {\n");
            sb.Append("  OverlijdenPlaats: ").Append(OverlijdenPlaats).Append("\n");
            sb.Append("  OverlijdenLand: ").Append(OverlijdenLand).Append("\n");
            sb.Append("  Overlijdensdatum: ").Append(Overlijdensdatum).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((IngeschrevenPersoonOverlijden)obj);
        }

        /// <summary>
        /// Returns true if IngeschrevenPersoonOverlijden instances are equal
        /// </summary>
        /// <param name="other">Instance of IngeschrevenPersoonOverlijden to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IngeschrevenPersoonOverlijden other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    OverlijdenPlaats == other.OverlijdenPlaats ||
                    OverlijdenPlaats != null &&
                    OverlijdenPlaats.Equals(other.OverlijdenPlaats)
                ) && 
                (
                    OverlijdenLand == other.OverlijdenLand ||
                    OverlijdenLand != null &&
                    OverlijdenLand.Equals(other.OverlijdenLand)
                ) && 
                (
                    Overlijdensdatum == other.Overlijdensdatum ||
                    Overlijdensdatum != null &&
                    Overlijdensdatum.Equals(other.Overlijdensdatum)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (OverlijdenPlaats != null)
                    hashCode = hashCode * 59 + OverlijdenPlaats.GetHashCode();
                    if (OverlijdenLand != null)
                    hashCode = hashCode * 59 + OverlijdenLand.GetHashCode();
                    if (Overlijdensdatum != null)
                    hashCode = hashCode * 59 + Overlijdensdatum.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(IngeschrevenPersoonOverlijden left, IngeschrevenPersoonOverlijden right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(IngeschrevenPersoonOverlijden left, IngeschrevenPersoonOverlijden right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
