/*
 * NPS op RaadpleegIngeschrevenPersoonNAW
 *
 * Specificatie RSGB 3.0 Json opvragen NPS
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class IngeschrevenPersoon : IEquatable<IngeschrevenPersoon>
    { 
        /// <summary>
        /// Gets or Sets VoorletterAanschrijving
        /// </summary>
        [DataMember(Name="voorletterAanschrijving")]
        public string VoorletterAanschrijving { get; set; }

        /// <summary>
        /// Gets or Sets Voornamen
        /// </summary>
        [DataMember(Name="voornamen")]
        public string Voornamen { get; set; }

        /// <summary>
        /// Gets or Sets VoorvoegselGeslachtnaam
        /// </summary>
        [DataMember(Name="voorvoegselGeslachtnaam")]
        public string VoorvoegselGeslachtnaam { get; set; }

        /// <summary>
        /// Gets or Sets Geslachtsnaam
        /// </summary>
        [DataMember(Name="geslachtsnaam")]
        public string Geslachtsnaam { get; set; }

        /// <summary>
        /// Gets or Sets Geslachtsaanduiding
        /// </summary>
        [DataMember(Name="geslachtsaanduiding")]
        public string Geslachtsaanduiding { get; set; }

        /// <summary>
        /// Gets or Sets Aanschrijfwijze
        /// </summary>
        [DataMember(Name="aanschrijfwijze")]
        public string Aanschrijfwijze { get; set; }

        /// <summary>
        /// Gets or Sets GeboorteDatum
        /// </summary>
        [DataMember(Name="geboorteDatum")]
        public DateTime? GeboorteDatum { get; set; }

        /// <summary>
        /// Gets or Sets Verblijfsadres
        /// </summary>
        [DataMember(Name="Verblijfsadres")]
        public Verblijfsadres Verblijfsadres { get; set; }

        /// <summary>
        /// Gets or Sets Adresbuitenland
        /// </summary>
        [DataMember(Name="Adresbuitenland")]
        public Adresbuitenland Adresbuitenland { get; set; }

        /// <summary>
        /// Gets or Sets Burgerservicenummer
        /// </summary>
        [DataMember(Name="burgerservicenummer")]
        public int? Burgerservicenummer { get; set; }

        /// <summary>
        /// Gets or Sets AanduidingNaamgebruik
        /// </summary>
        [DataMember(Name="aanduidingNaamgebruik")]
        public string AanduidingNaamgebruik { get; set; }

        /// <summary>
        /// Gets or Sets AanhefAanschrijving
        /// </summary>
        [DataMember(Name="aanhefAanschrijving")]
        public string AanhefAanschrijving { get; set; }

        /// <summary>
        /// Gets or Sets VoornamenAanschrijving
        /// </summary>
        [DataMember(Name="voornamenAanschrijving")]
        public string VoornamenAanschrijving { get; set; }

        /// <summary>
        /// Gets or Sets GeslachtsnaamAanschrijving
        /// </summary>
        [DataMember(Name="geslachtsnaamAanschrijving")]
        public string GeslachtsnaamAanschrijving { get; set; }

        /// <summary>
        /// Gets or Sets AdelijkeTitelOfPredikant
        /// </summary>
        [DataMember(Name="adelijkeTitelOfPredikant")]
        public string AdelijkeTitelOfPredikant { get; set; }

        /// <summary>
        /// Gets or Sets Geboorteplaats
        /// </summary>
        [DataMember(Name="geboorteplaats")]
        public string Geboorteplaats { get; set; }

        /// <summary>
        /// Gets or Sets Geboorteland
        /// </summary>
        [DataMember(Name="geboorteland")]
        public string Geboorteland { get; set; }

        /// <summary>
        /// Gets or Sets Ouder
        /// </summary>
        [DataMember(Name="ouder")]
        public List<Persoon> Ouder { get; set; }

        /// <summary>
        /// Gets or Sets Partner
        /// </summary>
        [DataMember(Name="partner")]
        public List<Persoon> Partner { get; set; }

        /// <summary>
        /// Gets or Sets Overlijden
        /// </summary>
        [DataMember(Name="overlijden")]
        public IngeschrevenPersoonOverlijden Overlijden { get; set; }

        /// <summary>
        /// Gets or Sets Telefoonnummer
        /// </summary>
        [DataMember(Name="telefoonnummer")]
        public string Telefoonnummer { get; set; }

        /// <summary>
        /// Gets or Sets Faxnummer
        /// </summary>
        [DataMember(Name="faxnummer")]
        public string Faxnummer { get; set; }

        /// <summary>
        /// Gets or Sets Emailadres
        /// </summary>
        [DataMember(Name="emailadres")]
        public string Emailadres { get; set; }

        /// <summary>
        /// Gets or Sets Verblijfstitel
        /// </summary>
        [DataMember(Name="verblijfstitel")]
        public IngeschrevenPersoonVerblijfstitel Verblijfstitel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IngeschrevenPersoon {\n");
            sb.Append("  VoorletterAanschrijving: ").Append(VoorletterAanschrijving).Append("\n");
            sb.Append("  Voornamen: ").Append(Voornamen).Append("\n");
            sb.Append("  VoorvoegselGeslachtnaam: ").Append(VoorvoegselGeslachtnaam).Append("\n");
            sb.Append("  Geslachtsnaam: ").Append(Geslachtsnaam).Append("\n");
            sb.Append("  Geslachtsaanduiding: ").Append(Geslachtsaanduiding).Append("\n");
            sb.Append("  Aanschrijfwijze: ").Append(Aanschrijfwijze).Append("\n");
            sb.Append("  GeboorteDatum: ").Append(GeboorteDatum).Append("\n");
            sb.Append("  Verblijfsadres: ").Append(Verblijfsadres).Append("\n");
            sb.Append("  Adresbuitenland: ").Append(Adresbuitenland).Append("\n");
            sb.Append("  Burgerservicenummer: ").Append(Burgerservicenummer).Append("\n");
            sb.Append("  AanduidingNaamgebruik: ").Append(AanduidingNaamgebruik).Append("\n");
            sb.Append("  AanhefAanschrijving: ").Append(AanhefAanschrijving).Append("\n");
            sb.Append("  VoornamenAanschrijving: ").Append(VoornamenAanschrijving).Append("\n");
            sb.Append("  GeslachtsnaamAanschrijving: ").Append(GeslachtsnaamAanschrijving).Append("\n");
            sb.Append("  AdelijkeTitelOfPredikant: ").Append(AdelijkeTitelOfPredikant).Append("\n");
            sb.Append("  Geboorteplaats: ").Append(Geboorteplaats).Append("\n");
            sb.Append("  Geboorteland: ").Append(Geboorteland).Append("\n");
            sb.Append("  Ouder: ").Append(Ouder).Append("\n");
            sb.Append("  Partner: ").Append(Partner).Append("\n");
            sb.Append("  Overlijden: ").Append(Overlijden).Append("\n");
            sb.Append("  Telefoonnummer: ").Append(Telefoonnummer).Append("\n");
            sb.Append("  Faxnummer: ").Append(Faxnummer).Append("\n");
            sb.Append("  Emailadres: ").Append(Emailadres).Append("\n");
            sb.Append("  Verblijfstitel: ").Append(Verblijfstitel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((IngeschrevenPersoon)obj);
        }

        /// <summary>
        /// Returns true if IngeschrevenPersoon instances are equal
        /// </summary>
        /// <param name="other">Instance of IngeschrevenPersoon to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IngeschrevenPersoon other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    VoorletterAanschrijving == other.VoorletterAanschrijving ||
                    VoorletterAanschrijving != null &&
                    VoorletterAanschrijving.Equals(other.VoorletterAanschrijving)
                ) && 
                (
                    Voornamen == other.Voornamen ||
                    Voornamen != null &&
                    Voornamen.Equals(other.Voornamen)
                ) && 
                (
                    VoorvoegselGeslachtnaam == other.VoorvoegselGeslachtnaam ||
                    VoorvoegselGeslachtnaam != null &&
                    VoorvoegselGeslachtnaam.Equals(other.VoorvoegselGeslachtnaam)
                ) && 
                (
                    Geslachtsnaam == other.Geslachtsnaam ||
                    Geslachtsnaam != null &&
                    Geslachtsnaam.Equals(other.Geslachtsnaam)
                ) && 
                (
                    Geslachtsaanduiding == other.Geslachtsaanduiding ||
                    Geslachtsaanduiding != null &&
                    Geslachtsaanduiding.Equals(other.Geslachtsaanduiding)
                ) && 
                (
                    Aanschrijfwijze == other.Aanschrijfwijze ||
                    Aanschrijfwijze != null &&
                    Aanschrijfwijze.Equals(other.Aanschrijfwijze)
                ) && 
                (
                    GeboorteDatum == other.GeboorteDatum ||
                    GeboorteDatum != null &&
                    GeboorteDatum.Equals(other.GeboorteDatum)
                ) && 
                (
                    Verblijfsadres == other.Verblijfsadres ||
                    Verblijfsadres != null &&
                    Verblijfsadres.Equals(other.Verblijfsadres)
                ) && 
                (
                    Adresbuitenland == other.Adresbuitenland ||
                    Adresbuitenland != null &&
                    Adresbuitenland.Equals(other.Adresbuitenland)
                ) && 
                (
                    Burgerservicenummer == other.Burgerservicenummer ||
                    Burgerservicenummer != null &&
                    Burgerservicenummer.Equals(other.Burgerservicenummer)
                ) && 
                (
                    AanduidingNaamgebruik == other.AanduidingNaamgebruik ||
                    AanduidingNaamgebruik != null &&
                    AanduidingNaamgebruik.Equals(other.AanduidingNaamgebruik)
                ) && 
                (
                    AanhefAanschrijving == other.AanhefAanschrijving ||
                    AanhefAanschrijving != null &&
                    AanhefAanschrijving.Equals(other.AanhefAanschrijving)
                ) && 
                (
                    VoornamenAanschrijving == other.VoornamenAanschrijving ||
                    VoornamenAanschrijving != null &&
                    VoornamenAanschrijving.Equals(other.VoornamenAanschrijving)
                ) && 
                (
                    GeslachtsnaamAanschrijving == other.GeslachtsnaamAanschrijving ||
                    GeslachtsnaamAanschrijving != null &&
                    GeslachtsnaamAanschrijving.Equals(other.GeslachtsnaamAanschrijving)
                ) && 
                (
                    AdelijkeTitelOfPredikant == other.AdelijkeTitelOfPredikant ||
                    AdelijkeTitelOfPredikant != null &&
                    AdelijkeTitelOfPredikant.Equals(other.AdelijkeTitelOfPredikant)
                ) && 
                (
                    Geboorteplaats == other.Geboorteplaats ||
                    Geboorteplaats != null &&
                    Geboorteplaats.Equals(other.Geboorteplaats)
                ) && 
                (
                    Geboorteland == other.Geboorteland ||
                    Geboorteland != null &&
                    Geboorteland.Equals(other.Geboorteland)
                ) && 
                (
                    Ouder == other.Ouder ||
                    Ouder != null &&
                    Ouder.SequenceEqual(other.Ouder)
                ) && 
                (
                    Partner == other.Partner ||
                    Partner != null &&
                    Partner.SequenceEqual(other.Partner)
                ) && 
                (
                    Overlijden == other.Overlijden ||
                    Overlijden != null &&
                    Overlijden.Equals(other.Overlijden)
                ) && 
                (
                    Telefoonnummer == other.Telefoonnummer ||
                    Telefoonnummer != null &&
                    Telefoonnummer.Equals(other.Telefoonnummer)
                ) && 
                (
                    Faxnummer == other.Faxnummer ||
                    Faxnummer != null &&
                    Faxnummer.Equals(other.Faxnummer)
                ) && 
                (
                    Emailadres == other.Emailadres ||
                    Emailadres != null &&
                    Emailadres.Equals(other.Emailadres)
                ) && 
                (
                    Verblijfstitel == other.Verblijfstitel ||
                    Verblijfstitel != null &&
                    Verblijfstitel.Equals(other.Verblijfstitel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (VoorletterAanschrijving != null)
                    hashCode = hashCode * 59 + VoorletterAanschrijving.GetHashCode();
                    if (Voornamen != null)
                    hashCode = hashCode * 59 + Voornamen.GetHashCode();
                    if (VoorvoegselGeslachtnaam != null)
                    hashCode = hashCode * 59 + VoorvoegselGeslachtnaam.GetHashCode();
                    if (Geslachtsnaam != null)
                    hashCode = hashCode * 59 + Geslachtsnaam.GetHashCode();
                    if (Geslachtsaanduiding != null)
                    hashCode = hashCode * 59 + Geslachtsaanduiding.GetHashCode();
                    if (Aanschrijfwijze != null)
                    hashCode = hashCode * 59 + Aanschrijfwijze.GetHashCode();
                    if (GeboorteDatum != null)
                    hashCode = hashCode * 59 + GeboorteDatum.GetHashCode();
                    if (Verblijfsadres != null)
                    hashCode = hashCode * 59 + Verblijfsadres.GetHashCode();
                    if (Adresbuitenland != null)
                    hashCode = hashCode * 59 + Adresbuitenland.GetHashCode();
                    if (Burgerservicenummer != null)
                    hashCode = hashCode * 59 + Burgerservicenummer.GetHashCode();
                    if (AanduidingNaamgebruik != null)
                    hashCode = hashCode * 59 + AanduidingNaamgebruik.GetHashCode();
                    if (AanhefAanschrijving != null)
                    hashCode = hashCode * 59 + AanhefAanschrijving.GetHashCode();
                    if (VoornamenAanschrijving != null)
                    hashCode = hashCode * 59 + VoornamenAanschrijving.GetHashCode();
                    if (GeslachtsnaamAanschrijving != null)
                    hashCode = hashCode * 59 + GeslachtsnaamAanschrijving.GetHashCode();
                    if (AdelijkeTitelOfPredikant != null)
                    hashCode = hashCode * 59 + AdelijkeTitelOfPredikant.GetHashCode();
                    if (Geboorteplaats != null)
                    hashCode = hashCode * 59 + Geboorteplaats.GetHashCode();
                    if (Geboorteland != null)
                    hashCode = hashCode * 59 + Geboorteland.GetHashCode();
                    if (Ouder != null)
                    hashCode = hashCode * 59 + Ouder.GetHashCode();
                    if (Partner != null)
                    hashCode = hashCode * 59 + Partner.GetHashCode();
                    if (Overlijden != null)
                    hashCode = hashCode * 59 + Overlijden.GetHashCode();
                    if (Telefoonnummer != null)
                    hashCode = hashCode * 59 + Telefoonnummer.GetHashCode();
                    if (Faxnummer != null)
                    hashCode = hashCode * 59 + Faxnummer.GetHashCode();
                    if (Emailadres != null)
                    hashCode = hashCode * 59 + Emailadres.GetHashCode();
                    if (Verblijfstitel != null)
                    hashCode = hashCode * 59 + Verblijfstitel.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(IngeschrevenPersoon left, IngeschrevenPersoon right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(IngeschrevenPersoon left, IngeschrevenPersoon right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
