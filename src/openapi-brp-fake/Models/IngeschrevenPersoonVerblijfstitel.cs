/*
 * NPS op RaadpleegIngeschrevenPersoonNAW
 *
 * Specificatie RSGB 3.0 Json opvragen NPS
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class IngeschrevenPersoonVerblijfstitel : IEquatable<IngeschrevenPersoonVerblijfstitel>
    { 
        /// <summary>
        /// Gets or Sets Omschrijving
        /// </summary>
        [DataMember(Name="omschrijving")]
        public string Omschrijving { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name="code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets BeginDatumGeldigheid
        /// </summary>
        [DataMember(Name="beginDatumGeldigheid")]
        public DateTime? BeginDatumGeldigheid { get; set; }

        /// <summary>
        /// Gets or Sets EindDatumGeldigheid
        /// </summary>
        [DataMember(Name="eindDatumGeldigheid")]
        public DateTime? EindDatumGeldigheid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IngeschrevenPersoonVerblijfstitel {\n");
            sb.Append("  Omschrijving: ").Append(Omschrijving).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  BeginDatumGeldigheid: ").Append(BeginDatumGeldigheid).Append("\n");
            sb.Append("  EindDatumGeldigheid: ").Append(EindDatumGeldigheid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((IngeschrevenPersoonVerblijfstitel)obj);
        }

        /// <summary>
        /// Returns true if IngeschrevenPersoonVerblijfstitel instances are equal
        /// </summary>
        /// <param name="other">Instance of IngeschrevenPersoonVerblijfstitel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IngeschrevenPersoonVerblijfstitel other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Omschrijving == other.Omschrijving ||
                    Omschrijving != null &&
                    Omschrijving.Equals(other.Omschrijving)
                ) && 
                (
                    Code == other.Code ||
                    Code != null &&
                    Code.Equals(other.Code)
                ) && 
                (
                    BeginDatumGeldigheid == other.BeginDatumGeldigheid ||
                    BeginDatumGeldigheid != null &&
                    BeginDatumGeldigheid.Equals(other.BeginDatumGeldigheid)
                ) && 
                (
                    EindDatumGeldigheid == other.EindDatumGeldigheid ||
                    EindDatumGeldigheid != null &&
                    EindDatumGeldigheid.Equals(other.EindDatumGeldigheid)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Omschrijving != null)
                    hashCode = hashCode * 59 + Omschrijving.GetHashCode();
                    if (Code != null)
                    hashCode = hashCode * 59 + Code.GetHashCode();
                    if (BeginDatumGeldigheid != null)
                    hashCode = hashCode * 59 + BeginDatumGeldigheid.GetHashCode();
                    if (EindDatumGeldigheid != null)
                    hashCode = hashCode * 59 + EindDatumGeldigheid.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(IngeschrevenPersoonVerblijfstitel left, IngeschrevenPersoonVerblijfstitel right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(IngeschrevenPersoonVerblijfstitel left, IngeschrevenPersoonVerblijfstitel right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
