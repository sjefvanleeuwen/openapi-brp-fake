/*
 * NPS op RaadpleegIngeschrevenPersoonNAW
 *
 * Specificatie RSGB 3.0 Json opvragen NPS
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;
using CsvHelper;
using System.IO;
using System.Linq;

namespace Org.OpenAPITools.Controllers
{ 

    public class naam {
        public string voornaam {get;set;}
        public bool geslacht {get;set;}

        public string achternaam {get;set;}
    }

    public class Adres {
        public string straatnaam {get;set;}
        public int huisnummer {get;set;}
        public string huisletter {get;set;}

        public string toevoeging {get;set;}

        public string woonplaats {get;set;}

        public string postcode {get;set;}

    }

    public class Fakes
    {
        
        public static Adres GetRandomAddressFromCity(string city, int seed)
        {
            var csv = new CsvReader(new StreamReader("inspireadressen.csv"));
            var result = csv.GetRecords<Adres>();
            var random = new Random(seed);
            return (from p in result where p.woonplaats=="Haarlem" orderby random.Next(int.MaxValue) select p).FirstOrDefault();
        }

        public static naam GetRandomFirstName(int seed)
        {
            var csv = new CsvReader(new StreamReader("voornamen.csv"));
            csv.Configuration.HeaderValidated=null;
            csv.Configuration.MissingFieldFound=null;
            var result = csv.GetRecords<naam>();
            var r = (from p in result select p).Skip(new Random(seed).Next(9754)).FirstOrDefault();
            var l = r.voornaam.Split(' ');
            r.voornaam=l[0];
            r.geslacht=l[1]=="(V)";
            return r;
        }

        public static naam GetRandomLastName(int seed)
        {
            var csv = new CsvReader(new StreamReader("achternamen.csv"));
            csv.Configuration.HeaderValidated=null;
            csv.Configuration.MissingFieldFound=null;
            var result = csv.GetRecords<naam>();
            return (from p in result select p).Skip(new Random(seed).Next(100)).FirstOrDefault();
        }
    }

    public class DefaultApiController : Controller
    { 
        /// <summary>
        /// Raadpleeg ingeschreven persoon NAW
        /// </summary>
        /// <remarks>Raadpleeg ingeschreven persoon NAW</remarks>
        /// <param name="burgerservicenummer"></param>
        /// <param name="periodevan">periode.van</param>
        /// <param name="periodetotEnMet">periode.totEnMet</param>
        /// <param name="inclusiefOverledenPersonen">is standaard false, geef waarde &#39;true&#39; of &#39;false&#39; mee</param>
        /// <param name="inclusiefGeheim">is standaard false, geef waarde &#39;true&#39; of &#39;false&#39; mee</param>
        /// <param name="zenderOrganisatie">Organisatiecode van de opvragende organisatie (kan zijn een gemeentecode, RSIN, OIN)</param>
        /// <param name="zenderApplicatie">Applicatiecode van de opvragende organisatie</param>
        /// <param name="zenderGebruiker">Organisatiebrede unieke gebruikerIdentificatie</param>
        /// <param name="zenderAdministratie">Administratie of organisatieonderdeel die gegevens opvraagt</param>
        /// <param name="ontvangerOrganisatie">Organisatiecode van de leverende organisatie (kan zijn een gemeentecode, RSIN, OIN)</param>
        /// <param name="ontvangerApplicatie">Applicatiecode van de leverende organisatie</param>
        /// <param name="ontvangerGebruiker">Organisatiebrede unieke gebruikerIdentificatie</param>
        /// <param name="ontvangerAdministratie">Administratie of organisatieonderdeel die gegevens levert</param>
        /// <param name="referentienummer"></param>
        /// <param name="tijdstipbericht"></param>
        /// <param name="entiteittype"></param>
        /// <response code="200">Gelukt</response>
        [HttpGet]
        [Route("/bg/RaadpleegIngeschrevenPersoonNAW")]
        [ValidateModelState]
        [SwaggerOperation("RaadpleegIngeschrevenPersoonNAWGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(IngeschrevenPersoon), description: "Gelukt")]
        public virtual IActionResult RaadpleegIngeschrevenPersoonNAWGet([FromQuery][Required()]string burgerservicenummer, [FromQuery]/*[Required()]*/int? periodevan, [FromQuery]/*[Required()]*/int? periodetotEnMet, [FromQuery]bool? inclusiefOverledenPersonen, [FromQuery]bool? inclusiefGeheim, [FromHeader]string zenderOrganisatie, [FromHeader]string zenderApplicatie, [FromHeader]string zenderGebruiker, [FromHeader]string zenderAdministratie, [FromHeader]string ontvangerOrganisatie, [FromHeader]string ontvangerApplicatie, [FromHeader]string ontvangerGebruiker, [FromHeader]string ontvangerAdministratie, [FromHeader]string referentienummer, [FromHeader]string tijdstipbericht, [FromHeader]string entiteittype)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IngeschrevenPersoon));

            string exampleJson = null;
            exampleJson = "{\n  \"verblijfstitel\" : {\n    \"omschrijving\" : \"omschrijving\",\n    \"code\" : \"code\",\n    \"beginDatumGeldigheid\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"eindDatumGeldigheid\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"voornamenAanschrijving\" : \"voornamenAanschrijving\",\n  \"voornamen\" : \"voornamen\",\n  \"geslachtsnaamAanschrijving\" : \"geslachtsnaamAanschrijving\",\n  \"aanschrijfwijze\" : \"aanschrijfwijze\",\n  \"Verblijfsadres\" : {\n    \"locatiebeschrijving\" : \"locatiebeschrijving\",\n    \"naamOpenbareRuimte\" : \"naamOpenbareRuimte\",\n    \"huisnummer\" : 6.02745618307040320615897144307382404804229736328125,\n    \"identificatieNummerAanduiding\" : 0,\n    \"postcode\" : \"postcode\",\n    \"huisletter\" : \"huisletter\",\n    \"huisnummertoevoeging\" : \"huisnummertoevoeging\",\n    \"woonplaatsIdentificatie\" : \"woonplaatsIdentificatie\",\n    \"woonplaatsnaam\" : \"woonplaatsnaam\",\n    \"periodeGeldigheid\" : {\n      \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n    }\n  },\n  \"geslachtsnaam\" : \"geslachtsnaam\",\n  \"voorletterAanschrijving\" : \"voorletterAanschrijving\",\n  \"faxnummer\" : \"faxnummer\",\n  \"aanduidingNaamgebruik\" : \"aanduidingNaamgebruik\",\n  \"geboorteDatum\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"emailadres\" : \"emailadres\",\n  \"geboorteland\" : \"geboorteland\",\n  \"adelijkeTitelOfPredikant\" : \"adelijkeTitelOfPredikant\",\n  \"overlijden\" : {\n    \"overlijdenPlaats\" : \"overlijdenPlaats\",\n    \"overlijdenLand\" : \"overlijdenLand\",\n    \"overlijdensdatum\" : \"2000-01-23T04:56:07.000+00:00\"\n  },\n  \"burgerservicenummer\" : 1,\n  \"telefoonnummer\" : \"telefoonnummer\",\n  \"geslachtsaanduiding\" : \"geslachtsaanduiding\",\n  \"partner\" : [ {\n    \"voornamen\" : \"voornamen\",\n    \"voorlettersAanschrijving\" : \"voorlettersAanschrijving\",\n    \"geslachtsaanduiding\" : \"geslachtsaanduiding\",\n    \"aanschrijfwijze\" : \"aanschrijfwijze\",\n    \"Verblijfsadres\" : {\n      \"locatiebeschrijving\" : \"locatiebeschrijving\",\n      \"naamOpenbareRuimte\" : \"naamOpenbareRuimte\",\n      \"huisnummer\" : 6.02745618307040320615897144307382404804229736328125,\n      \"identificatieNummerAanduiding\" : 0,\n      \"postcode\" : \"postcode\",\n      \"huisletter\" : \"huisletter\",\n      \"huisnummertoevoeging\" : \"huisnummertoevoeging\",\n      \"woonplaatsIdentificatie\" : \"woonplaatsIdentificatie\",\n      \"woonplaatsnaam\" : \"woonplaatsnaam\",\n      \"periodeGeldigheid\" : {\n        \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n      }\n    },\n    \"geslachtsnaam\" : \"geslachtsnaam\",\n    \"periodeGeldigheid\" : {\n      \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"voorvoegselGeslachtsnaam\" : \"voorvoegselGeslachtsnaam\",\n    \"geboortedatum\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Adresbuitenland\" : {\n      \"landcode\" : {\n        \"adresBuiteland3\" : \"adresBuiteland3\",\n        \"adresBuiteland1\" : \"adresBuiteland1\",\n        \"adresBuiteland2\" : \"adresBuiteland2\",\n        \"landnaam\" : \"landnaam\"\n      }\n    }\n  }, {\n    \"voornamen\" : \"voornamen\",\n    \"voorlettersAanschrijving\" : \"voorlettersAanschrijving\",\n    \"geslachtsaanduiding\" : \"geslachtsaanduiding\",\n    \"aanschrijfwijze\" : \"aanschrijfwijze\",\n    \"Verblijfsadres\" : {\n      \"locatiebeschrijving\" : \"locatiebeschrijving\",\n      \"naamOpenbareRuimte\" : \"naamOpenbareRuimte\",\n      \"huisnummer\" : 6.02745618307040320615897144307382404804229736328125,\n      \"identificatieNummerAanduiding\" : 0,\n      \"postcode\" : \"postcode\",\n      \"huisletter\" : \"huisletter\",\n      \"huisnummertoevoeging\" : \"huisnummertoevoeging\",\n      \"woonplaatsIdentificatie\" : \"woonplaatsIdentificatie\",\n      \"woonplaatsnaam\" : \"woonplaatsnaam\",\n      \"periodeGeldigheid\" : {\n        \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n      }\n    },\n    \"geslachtsnaam\" : \"geslachtsnaam\",\n    \"periodeGeldigheid\" : {\n      \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"voorvoegselGeslachtsnaam\" : \"voorvoegselGeslachtsnaam\",\n    \"geboortedatum\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Adresbuitenland\" : {\n      \"landcode\" : {\n        \"adresBuiteland3\" : \"adresBuiteland3\",\n        \"adresBuiteland1\" : \"adresBuiteland1\",\n        \"adresBuiteland2\" : \"adresBuiteland2\",\n        \"landnaam\" : \"landnaam\"\n      }\n    }\n  } ],\n  \"aanhefAanschrijving\" : \"aanhefAanschrijving\",\n  \"ouder\" : [ {\n    \"voornamen\" : \"voornamen\",\n    \"voorlettersAanschrijving\" : \"voorlettersAanschrijving\",\n    \"geslachtsaanduiding\" : \"geslachtsaanduiding\",\n    \"aanschrijfwijze\" : \"aanschrijfwijze\",\n    \"Verblijfsadres\" : {\n      \"locatiebeschrijving\" : \"locatiebeschrijving\",\n      \"naamOpenbareRuimte\" : \"naamOpenbareRuimte\",\n      \"huisnummer\" : 6.02745618307040320615897144307382404804229736328125,\n      \"identificatieNummerAanduiding\" : 0,\n      \"postcode\" : \"postcode\",\n      \"huisletter\" : \"huisletter\",\n      \"huisnummertoevoeging\" : \"huisnummertoevoeging\",\n      \"woonplaatsIdentificatie\" : \"woonplaatsIdentificatie\",\n      \"woonplaatsnaam\" : \"woonplaatsnaam\",\n      \"periodeGeldigheid\" : {\n        \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n      }\n    },\n    \"geslachtsnaam\" : \"geslachtsnaam\",\n    \"periodeGeldigheid\" : {\n      \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"voorvoegselGeslachtsnaam\" : \"voorvoegselGeslachtsnaam\",\n    \"geboortedatum\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Adresbuitenland\" : {\n      \"landcode\" : {\n        \"adresBuiteland3\" : \"adresBuiteland3\",\n        \"adresBuiteland1\" : \"adresBuiteland1\",\n        \"adresBuiteland2\" : \"adresBuiteland2\",\n        \"landnaam\" : \"landnaam\"\n      }\n    }\n  }, {\n    \"voornamen\" : \"voornamen\",\n    \"voorlettersAanschrijving\" : \"voorlettersAanschrijving\",\n    \"geslachtsaanduiding\" : \"geslachtsaanduiding\",\n    \"aanschrijfwijze\" : \"aanschrijfwijze\",\n    \"Verblijfsadres\" : {\n      \"locatiebeschrijving\" : \"locatiebeschrijving\",\n      \"naamOpenbareRuimte\" : \"naamOpenbareRuimte\",\n      \"huisnummer\" : 6.02745618307040320615897144307382404804229736328125,\n      \"identificatieNummerAanduiding\" : 0,\n      \"postcode\" : \"postcode\",\n      \"huisletter\" : \"huisletter\",\n      \"huisnummertoevoeging\" : \"huisnummertoevoeging\",\n      \"woonplaatsIdentificatie\" : \"woonplaatsIdentificatie\",\n      \"woonplaatsnaam\" : \"woonplaatsnaam\",\n      \"periodeGeldigheid\" : {\n        \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n        \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n      }\n    },\n    \"geslachtsnaam\" : \"geslachtsnaam\",\n    \"periodeGeldigheid\" : {\n      \"van\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"totEnMet\" : \"2000-01-23T04:56:07.000+00:00\"\n    },\n    \"voorvoegselGeslachtsnaam\" : \"voorvoegselGeslachtsnaam\",\n    \"geboortedatum\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"Adresbuitenland\" : {\n      \"landcode\" : {\n        \"adresBuiteland3\" : \"adresBuiteland3\",\n        \"adresBuiteland1\" : \"adresBuiteland1\",\n        \"adresBuiteland2\" : \"adresBuiteland2\",\n        \"landnaam\" : \"landnaam\"\n      }\n    }\n  } ],\n  \"voorvoegselGeslachtnaam\" : \"voorvoegselGeslachtnaam\",\n  \"Adresbuitenland\" : {\n    \"landcode\" : {\n      \"adresBuiteland3\" : \"adresBuiteland3\",\n      \"adresBuiteland1\" : \"adresBuiteland1\",\n      \"adresBuiteland2\" : \"adresBuiteland2\",\n      \"landnaam\" : \"landnaam\"\n    }\n  },\n  \"geboorteplaats\" : \"geboorteplaats\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IngeschrevenPersoon>(exampleJson)
            : default(IngeschrevenPersoon);
            //TODO: Change the data returned
            int seed = int.Parse(burgerservicenummer);
            example.Burgerservicenummer=seed;
            var adres = Fakes.GetRandomAddressFromCity("Haarlem",seed);
            example.Verblijfsadres.Woonplaatsnaam = adres.woonplaats;
            example.Verblijfsadres.Huisnummer = adres.huisnummer;
            example.Verblijfsadres.Huisletter = adres.huisletter;
            example.Verblijfsadres.Huisnummertoevoeging=adres.toevoeging;
            example.Verblijfsadres.Postcode = adres.postcode;
            example.Verblijfsadres.Straatnaam = adres.straatnaam;
            var naam = Fakes.GetRandomFirstName(seed); 
            example.Voornamen = naam.voornaam;
            if (naam.geslacht){
                example.Geslachtsaanduiding = "V";
                example.AanhefAanschrijving = "mevrouw";
            }
            else {
                example.Geslachtsaanduiding = "M";
                example.AanhefAanschrijving = "de heer";
            }
            example.Geslachtsnaam = Fakes.GetRandomLastName(seed).achternaam;
            example.GeboorteDatum = DateTime.Now.AddDays(-7665-new Random(seed).Next(18250));
            example.Geboorteland="Nederland";
            example.Geboorteplaats="Haarlem";
            example.Emailadres = example.Voornamen + "." + example.Geslachtsnaam + "@testmail.nl";
            example.AanduidingNaamgebruik = "E";
            example.VoorletterAanschrijving = example.Voornamen[0].ToString();


            //exampl
            return new ObjectResult(example);
        }
    }
}
